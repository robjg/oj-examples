<project basedir="." name="Oddjob Examples">

	<!-- =================================================================== -->
	<!-- Initialization target                                               -->
	<!-- =================================================================== -->
	<target name="init">

		<tstamp/>

		<!-- =================================================================== -->
		<!-- Properties                                                          -->
		<!-- =================================================================== -->

		<property file="../oj-assembly/version.properties"/>
		
		<property name="Name"     value="Oddjob Examples"/>
		<property name="name"     value="oj-examples"/>
		<property name="build.version"  value="${project.version}"/>

		<echo message="--------------------------------------------------------------"/>
		<echo message="            ${Name} ${build.version}                                "/>
		<echo message="--------------------------------------------------------------"/>
		<echo message="Building with ${ant.version}"/>
		<echo message="using build file ${ant.file}"/>
		<echo message="--------------------------------------------------------------"/>

		<property name="src.dir"      		value="./src"/>

		<property name="lib.dir"      		value="./lib"/>
		<property name="src.docs"     		value="${src.dir}/documentation"/>
		<property name="docs.dir"     		value="${src.dir}/documentation/xdocs"/>
		<property name="stylesheets.dir"  	value="${src.dir}/documentation/stylesheets"/>

		<property name="build.dir"            value="./build"/>
		<property name="build.src"            value="${build.dir}/src"/>
		<property name="build.docs"           value="${build.dir}/docs"/>
		<property name="build.reference"      value="${build.docs}/reference"/>
		<property name="build.xdocs"          value="${build.dir}/xdocs"/>

		<filter token="Name"    value="${Name}"/>
		<filter token="name"    value="${name}"/>
		<filter token="version" value="${build.version}"/>
		<filter token="date"    value="${TODAY}"/>
		<filter token="log"     value="true"/>
		<filter token="verbose" value="true"/>
		<filter token="reference" value="../reference"/>
		<filter token="javadoc" value="../api"/>
		<filter token="userguide" value="../userguide"/>
		<filter token="devguide" value="../devguide"/>

	</target>

	<!-- =================================================================== -->
	<!-- Prepares the docs                                                   -->
	<!-- =================================================================== -->
	<target name="prepare-docs">
		
		<mkdir dir="${build.xdocs}" />
		<mkdir dir="${build.docs}" />
		<mkdir dir="${build.dir}/work"/>

		<!-- make filtered copy of XML docs -->
		<copy todir="${build.xdocs}" filtering="on">
			<fileset dir="${docs.dir}"/>
		</copy>

	</target>

	<!-- =================================================================== -->
	<!-- The documentation system                                            -->
	<!-- =================================================================== -->

	<target name="docs"
          depends="init, prepare-docs"
          description="Builds the documentation">

		<copy todir="${build.docs}" filtering="off">
			<fileset file="${stylesheets.dir}/oddjob.css"/>
		</copy>
			
		<xslt basedir="${build.xdocs}" destdir="${build.docs}"
             extension=".html" style="${stylesheets.dir}/site.xsl">
			<param name="header" expression="header.html"/>
			<param name="index-file" expression="sidebar.xml"/>
		</xslt>

		<mkdir dir="${build.docs}/userguide"/>
		<mkdir dir="${build.docs}/userguide/images"/>
		<copy todir="${build.docs}/userguide/images" filtering="off">
			<fileset dir="${src.docs}/userguide/images"/>
		</copy>
		<copy todir="${build.docs}/userguide" filtering="on">
			<fileset dir="${src.docs}/userguide">
				<exclude name="images"/>
				<exclude name="dia"/>
			</fileset>
		</copy>

		<mkdir dir="${build.docs}/devguide"/>
		<mkdir dir="${build.docs}/devguide/images"/>
		<copy todir="${build.docs}/devguide/images" filtering="off">
			<fileset dir="${src.docs}/devguide/images"/>
		</copy>
		<copy todir="${build.docs}/devguide" filtering="on">
			<fileset dir="${src.docs}/devguide"/>
		</copy>
		
	</target>

	<!-- =================================================================== -->
	<!-- Prepares the source distribution                                    -->
	<!-- =================================================================== -->
	<target name="dist-src" depends="init" if="dist.src.dir"
          description="Prepares the source distribution">

        <property name="to.dir" value="${dist.src.dir}/${name}"/>
          	
		<copy todir="${to.dir}/src" filtering="off">
			<fileset dir="${src.dir}"/>
		</copy>

		<copy todir="${to.dir}/examples" filtering="off">
			<fileset dir="examples">
				<exclude name="**/*.ser"/>
			</fileset>
		</copy>

		<copy todir="${to.dir}/lib" filtering="off">
			<fileset dir="${lib.dir}"/>
		</copy>

		<copy todir="${to.dir}">
			<fileset dir=".">
				<include name="build.xml"/>
                <include name="oj-assemble.xml"/>
				<include name="LICENSE.txt"/>
				<include name="NOTICE.txt"/>
				<include name="README.md"/>
				<include name="pom.xml"/>
			</fileset>
		</copy>

	</target>

	<!-- =================================================================== -->
	<!-- Prepares the binary distribution                                    -->
	<!-- =================================================================== -->
	<target name="dist-bin" depends="docs"
			if="dist.bin.dir"
		  description="Prepares the binary distribution">

		<property name="to.dir" value="${dist.bin.dir}"/>
		  	
		<copy todir="${to.dir}/examples">
			<fileset dir="examples">
				<exclude name="**/*.ser"/>
			</fileset>
		</copy>

		<copy todir="${dist.bin.dir}/docs">
			<fileset dir="${build.docs}">
				<exclude name="*.dia"/>
			</fileset>
		</copy>
				
	</target>
	

	<!-- =================================================================== -->
	<!-- Clean targets                                                       -->
	<!-- =================================================================== -->
	
	<target name="clean" depends="init" description="Cleans the build directories">
		<delete dir="${build.dir}"/>
		<delete dir="examples/scheduling/dailyftp"/>
	</target>

</project>

<!-- End of file -->
